import { FlashcoreFileAdapter } from './flashcore-fs.js';
import { Globals } from './globals.js';
import { logger } from './logger.js';

let h=!1;const t=new Map,F={clear:()=>Globals.getFlashcoreAdapter().clear(),delete:(e,a)=>{if(a?.namespace&&(e=Array.isArray(a.namespace)?`${a.namespace.join("/")}__${e}`:`${a.namespace}__${e}`),t.has(e)){const r=Globals.getFlashcoreAdapter().get(e);if(r instanceof Promise)return r.then(s=>{t.get(e).forEach(i=>i(s,void 0));}).then(()=>Globals.getFlashcoreAdapter().delete(e)).catch(()=>Globals.getFlashcoreAdapter().delete(e));t.get(e).forEach(s=>s(r,void 0));}return Globals.getFlashcoreAdapter().delete(e)},get:(e,a)=>(a?.namespace&&(e=Array.isArray(a.namespace)?`${a.namespace.join("/")}__${e}`:`${a.namespace}__${e}`),Globals.getFlashcoreAdapter().get(e)??a?.default),has:(e,a)=>(a?.namespace&&(e=`${a.namespace}__${e}`),Globals.getFlashcoreAdapter().has(e)),off:(e,a,r)=>{r?.namespace&&(e=Array.isArray(r.namespace)?`${r.namespace.join("/")}__${e}`:`${r.namespace}__${e}`),t.has(e)&&a?(t.get(e)?.delete(a),t.get(e)?.size===0&&t.delete(e)):t.has(e)&&t.delete(e);},on:(e,a,r)=>{r?.namespace&&(e=Array.isArray(r.namespace)?`${r.namespace.join("/")}__${e}`:`${r.namespace}__${e}`),t.has(e)||t.set(e,new Set),t.get(e)?.add(a);},set:(e,a,r)=>{if(r?.namespace&&(e=Array.isArray(r.namespace)?`${r.namespace.join("/")}__${e}`:`${r.namespace}__${e}`),t.has(e)||typeof a=="function"){const s=Globals.getFlashcoreAdapter().get(e),i=async o=>{let l=a;return typeof a=="function"&&(l=a(o)),t.has(e)&&t.get(e).forEach(p=>p(o,l)),Globals.getFlashcoreAdapter().set(e,l)};return s instanceof Promise?s.then(async o=>await i(o)).catch(()=>Globals.getFlashcoreAdapter().set(e,a)):i(s)}return Globals.getFlashcoreAdapter().set(e,a)},$init:async e=>{const{keyvOptions:a}=e;if(logger.debug("Initializing Flashcore with options:",e),h){logger.debug("Flashcore has already been initialized. Ignoring...");return}try{if(a){let r;try{r=(await import('keyv')).default;}catch(i){throw new Error("Failed to import Keyv. Did you remember to install `keyv`?",{cause:i})}const s=new r(a);s.on("error",i=>{logger.error("Keyv error:",i);}),Globals.registerFlashcore(s);}else {const r=e.adapter??new FlashcoreFileAdapter;await r.init(),Globals.registerFlashcore(r);}}catch(r){throw logger.error("Failed to initialize Flashcore:",r),new Error("Failed to initialize Flashcore",{cause:r})}h=!0;}};

export { F as Flashcore };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=flashcore.js.map