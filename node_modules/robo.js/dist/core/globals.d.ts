import { H as HandlerRecord, A as Api, q as Command, b as Context, e as Middleware, z as Config, F as FlashcoreAdapter, E as Event } from '../index-e9e52e45.js';
import { Collection } from 'discord.js';
import Keyv from 'keyv';
import './logger.js';
import 'node:http';

declare const Globals: {
    getConfig: () => any;
    getFlashcoreAdapter: () => any;
    getPortalValues: () => {
        apis: Collection<string, HandlerRecord<Api>>;
        commands: Collection<string, HandlerRecord<Command>>;
        context: Collection<string, HandlerRecord<Context>>;
        events: Collection<string, HandlerRecord<globalThis.Event>[]>;
        middleware: HandlerRecord<Middleware>[];
        moduleKeys: Set<string>;
    };
    init: () => void;
    instanceId: string;
    registerConfig: (config: Config) => void;
    registerFlashcore: (adapter: FlashcoreAdapter | Keyv<unknown, unknown>) => void;
    registerPortal: (apis: Collection<string, HandlerRecord<Api>>, commands: Collection<string, HandlerRecord<Command>>, context: Collection<string, HandlerRecord<Context>>, events: Collection<string, HandlerRecord<Event>[]>, middleware: HandlerRecord<Middleware>[]) => void;
};

export { Globals };
