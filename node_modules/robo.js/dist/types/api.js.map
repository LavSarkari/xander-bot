{"version":3,"sources":["../../src/types/api.ts"],"names":["api_default"],"mappings":"AA+BA,IAAOA,EAAQ,CAAC","sourcesContent":["import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { BaseConfig } from '.'\n\nexport type HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'OPTIONS' | 'HEAD'\n\nexport interface RoboRequest {\n\treq: IncomingMessage\n\tbody?: unknown\n\tmethod: HttpMethod\n\tquery: Record<string, unknown>\n\tparams: Record<string, unknown>\n}\n\nexport interface RoboReply {\n\tres: ServerResponse\n\tcode: (statusCode: number) => RoboReply\n\tsend: (data: string) => RoboReply\n\theader: (name: string, value: string) => RoboReply\n\thasSent: boolean\n}\n\nexport type RouteHandler = (req: RoboRequest, res: RoboReply) => unknown | Promise<unknown>\n\nexport interface Api {\n\tdefault: (request: RoboRequest, reply: RoboReply) => unknown | Promise<unknown>\n}\n\nexport interface ApiEntry extends BaseConfig {\n\tsubroutes?: Record<string, ApiEntry>\n}\n\nexport default {}\n"]}