{"version":3,"sources":["../../src/types/commands.ts"],"names":["commands_default"],"mappings":"AAuFA,IAAOA,EAAQ,CAAC","sourcesContent":["import type {\n\tApplicationCommandOptionChoiceData,\n\tApplicationIntegrationType,\n\tAttachment,\n\tAutocompleteInteraction,\n\tCommandInteraction,\n\tGuildBasedChannel,\n\tGuildMember,\n\tInteractionContextType,\n\tInteractionReplyOptions,\n\tMessagePayload,\n\tRole,\n\tUser\n} from 'discord.js'\nimport type { BaseConfig, SageOptions } from './index.js'\n\nexport interface Command {\n\tautocomplete?: (\n\t\tinteraction: AutocompleteInteraction\n\t) => Promise<ApplicationCommandOptionChoiceData<string | number>[]>\n\tconfig?: CommandConfig\n\tdefault: (interaction: CommandInteraction, options: unknown) => unknown | Promise<unknown>\n}\n\nexport interface CommandConfig extends BaseConfig {\n\tcontexts?: CommandContext[]\n\tdefaultMemberPermissions?: string | number | bigint\n\t/** @deprecated Use `contexts` instead */\n\tdmPermission?: boolean\n\tdescriptionLocalizations?: Record<string, string>\n\tintegrationTypes?: CommandIntegrationType[]\n\tnameLocalizations?: Record<string, string>\n\toptions?: readonly CommandOption[]\n\tsage?: false | SageOptions\n\ttimeout?: number\n}\n\nexport type CommandContext = 'BotDM' | 'Guild' | 'PrivateChannel' | InteractionContextType\n\nexport interface CommandEntry extends CommandConfig {\n\tsubcommands?: Record<string, CommandEntry>\n}\n\nexport type CommandIntegrationType = 'GuildInstall' | 'UserInstall' | ApplicationIntegrationType\n\nexport interface CommandOption {\n\tautocomplete?: boolean\n\tchoices?: ApplicationCommandOptionChoiceData<string | number>[]\n\tdescription?: string\n\tdescriptionLocalizations?: Record<string, string>\n\tmax?: number\n\tmin?: number\n\tname: string\n\tnameLocalizations?: Record<string, string>\n\trequired?: boolean\n\ttype?: keyof CommandOptionTypes\n}\n\nexport type CommandResult = string | InteractionReplyOptions | MessagePayload | void\n\nexport type CommandOptionTypes = {\n\tstring: string\n\tinteger: number\n\tnumber: number\n\tboolean: boolean\n\tuser: User\n\tchannel: GuildBasedChannel\n\tmember: GuildMember\n\trole: Role\n\tattachment: Attachment\n\tmention: GuildMember | Role\n}\n\nexport type CommandOptions<ConfigType extends CommandConfig> = {\n\t[K in NonNullable<ConfigType['options']>[number] as K['name']]: K extends { required: true; type: infer TypeName }\n\t\t? TypeName extends keyof CommandOptionTypes\n\t\t\t? CommandOptionTypes[TypeName]\n\t\t\t: string\n\t\t: K extends { type: infer TypeName }\n\t\t? TypeName extends keyof CommandOptionTypes\n\t\t\t? CommandOptionTypes[TypeName] | undefined\n\t\t\t: string | undefined\n\t\t: K extends { required: true }\n\t\t? string\n\t\t: string | undefined\n}\n\nexport default {}\n"]}